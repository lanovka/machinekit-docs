name: Rebuild on pull request on master

on:
  pull_request:
    branches:
      - master

jobs:
  buildMachinekitSite:
    runs-on: ubuntu-latest
    env:
      SHA: ${{ github.event.pull_request.head.sha }}
      POSITION_FROM_TOP: '1'
      COMMIT_SHA: '${{ github.event.after }}'
      OUTPUT_NAME: 'machinekit-site-${{ env.SHA }}'

    steps:
      # Locally clone the repository which we want to build with depth of 5 commits
      - name: Checkout the pull request for Machinekit-docs
        uses: actions/checkout@v2
        with:
          ref: ${{ env.SHA }}
          path: to_build
          fetch-depth: '5'

      - name: Git SHA on which the build is requested
        run: echo ${{ env.SHA }}

      - name: Git log of repository on which the build is requested
        run: git log
        working-directory: ./to_build

      # Create directory for output files and export it's name as a environment variable
      - name: Create output directory
        env:
          DIRECTORY_NAME: ${{ env.OUTPUT_NAME }}
        run: |
          mkdir ./$DIRECTORY_NAME
          echo ::set-env name=output_directory::$(pwd)/$DIRECTORY_NAME
          mkdir ${{ env.OUTPUT_DIRECTORY }}/build

      # The commits pushed to gh-pages branch will appear as originated from the author
      # of the changes
      - name: Create JSON with commit metadata
        env: 
          POSITION_FROM_TOP: ${{ env.POSITION_FROM_TOP }}
          FILENAME: '${{ env.OUTPUT_DIRECTORY }}/build-metadata.json'
          COMMIT_SHA: ${{ env.COMMIT_SHA }}
        run: |
          echo "###########################################################"
          echo "# Commit which will be used for mining of the credentials #"
          echo "###########################################################"
          git log -n $POSITION_FROM_TOP
          jq -n --arg authoremail $(git log --format='%ae' -n $POSITION_FROM_TOP $COMMIT_SHA) --arg authorname $(git log --format='%en' -n $POSITION_FROM_TOP $COMMIT_SHA) --arg commitmsg $(git log --format='%B' -n $POSITION_FROM_TOP $COMMIT_SHA) --arg sha $COMMIT_SHA) '{"author":"\($authorname)","email":"\($authoremail)","message":"\($commitmsg)","sha":"\($sha)"}' > $FILENAME
        working-directory: ./to_build

      # Running the commands in ubuntu-master and not in Docker container because
      # of the age of the container -> It cannot be even build anymore
      - name: Run a Jekyll builder
        run: docker run -v $(pwd)/to_build:/work haberlerm/docker-jekyll-asciidoctor jekyll build --verbose --trace --config _config.yml,_config_devel.yml

      - name: Print newly created files
        run: ls -R _site -print1
        working-directory: ./to_build

      - name: Copy the newly generated site to output directory
        run: cp -r to_build/_site/* ${{ env.OUTPUT_DIRECTORY }}/build

      - name: Create archive of the build
        run: |
          tar -czvf ${{ env.OUTPUT_NAME}}.tar.gz ${{ env.OUTPUT_DIRECTORY }}
      
      - name: Upload the artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ env.OUTPUT_NAME}}.tar.gz
          path: ./${{ env.OUTPUT_NAME}}.tar.gz

